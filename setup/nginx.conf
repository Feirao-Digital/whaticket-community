#user  nobody;
worker_processes  1;

#error_log  logs/error.log;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  75 20;

    # ========================================================================
    # MAPAS PARA LÓGICA DE CORS
    # Esta é a forma correta de lidar com condicionais no Nginx.
    # ========================================================================

    # Mapa 1: Define a origem permitida.
    map $http_origin $cors_origin {
        default ""; # Bloqueia qualquer outra origem
        "~^https?://whatsapp.fdigital.com.br:5011$" $http_origin;
        "~^https?://escritorio.fdigital.com.br:5011$" $http_origin;
    }

    # Mapa 2: Define se as credenciais são permitidas para a origem.
    map $http_origin $cors_creds {
        default ""; # Por padrão, não permite
        "~^https?://whatsapp.fdigital.com.br:5011$" "true";
        "~^https?://escritorio.fdigital.com.br:5011$" "true";
    }

# --- NOVO MAPA PARA WEBSOCKETS ---
    # Cria uma variável $connection_upgrade baseada no cabeçalho Upgrade do cliente.
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }


    # ========================================================================
    # Servidor do Frontend (porta 5011) - Sem alterações
    # ========================================================================
    server {
        listen 5011 ssl;
        server_name whatsapp.fdigital.com.br;

        ssl_certificate C:/nginx-1.28.0/certificados/whatsappfullchain.cer;
        ssl_certificate_key C:/nginx-1.28.0/certificados/whatsappcert.key;

        location / {
            proxy_pass http://127.0.0.1:3333;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
        }
    }


    # ========================================================================
    # Servidor do Backend/API (porta 5013) - Lógica de CORS SIMPLIFICADA
    # ========================================================================
    server {
        listen 5013 ssl;
        server_name escritorio.fdigital.com.br;

        ssl_certificate C:/nginx-1.28.0/certificados/fullchain.cer;
        ssl_certificate_key C:/nginx-1.28.0/certificados/cert.key;

        location / {
            # Responde diretamente às requisições de preflight (OPTIONS)
            if ($request_method = 'OPTIONS') {
                # Usa as variáveis dos mapas para adicionar os cabeçalhos
                # Se a origem não estiver na whitelist, as variáveis estarão vazias e os headers não serão adicionados
                add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
                add_header 'Access-Control-Allow-Credentials' "$cors_creds" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Length' 0;
                return 204;
            }

            # Para requisições normais (POST, GET, etc.), não precisamos mais de "if" aqui
            
            # Esconde qualquer header de CORS que o backend possa enviar, para evitar duplicidade
            proxy_hide_header 'Access-Control-Allow-Origin';
            proxy_hide_header 'Access-Control-Allow-Credentials';

            # Adiciona nossos cabeçalhos corretos usando as variáveis do mapa
            add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
            add_header 'Access-Control-Allow-Credentials' "$cors_creds" always;

  # --- AJUSTES PARA WEBSOCKET ---
            proxy_set_header Connection $connection_upgrade; # Usando a variável do mapa

            # Configuração do Proxy Reverso
            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
        }
    }
}